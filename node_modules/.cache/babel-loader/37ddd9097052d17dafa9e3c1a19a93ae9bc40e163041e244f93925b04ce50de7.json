{"ast":null,"code":"import _slicedToArray from\"C:/Users/HP/Desktop/Udemy/REACT/robofriends/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import CardList from\"../components/CardList\";import SearchBox from\"../components/SearchBox\";import Scroll from\"../components/Scroll\";import ErrorBoundry from\"../components/ErrorBoundry\";import\"./App.css\";import\"tachyons\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// constructor() {\n//   super()\n//   this.state = {\n//     robots: [],\n//     searchfield: ''\n//   }\n// }\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),robots=_useState2[0],setRobots=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchfield=_useState4[0],setSearchfield=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),count=_useState6[0],setCount=_useState6[1];// componentDidMount() {\n//   fetch('https://jsonplaceholder.typicode.com/users')\n//     .then(response=> response.json())\n//     .then(users => {this.setState({ robots: users})});\n// }\nuseEffect(function(){fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){setRobots(users);});},[]);var onSearchChange=function onSearchChange(event){setSearchfield(event.target.value);};var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchfield.toLowerCase());});return!robots.length?/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"tc\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(ErrorBoundry,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","CardList","SearchBox","Scroll","ErrorBoundry","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","robots","setRobots","_useState3","_useState4","searchfield","setSearchfield","_useState5","_useState6","count","setCount","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","className","searchChange"],"sources":["C:/Users/HP/Desktop/Udemy/REACT/robofriends/src/containers/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport Scroll from \"../components/Scroll\";\r\nimport ErrorBoundry from \"../components/ErrorBoundry\";\r\nimport \"./App.css\";\r\nimport \"tachyons\";\r\n\r\nfunction App() {\r\n  // constructor() {\r\n  //   super()\r\n  //   this.state = {\r\n  //     robots: [],\r\n  //     searchfield: ''\r\n  //   }\r\n  // }\r\n  const [robots, setRobots] = useState([]);\r\n  const [searchfield, setSearchfield] = useState('');\r\n  const [count, setCount] = useState(0);\r\n\r\n  // componentDidMount() {\r\n  //   fetch('https://jsonplaceholder.typicode.com/users')\r\n  //     .then(response=> response.json())\r\n  //     .then(users => {this.setState({ robots: users})});\r\n  // }\r\n\r\n  useEffect( () => {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response=> response.json())\r\n    .then(users => {setRobots(users)});\r\n  }, [])\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchfield(event.target.value);\r\n  };\r\n\r\n  const filteredRobots = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n  });\r\n  return !robots.length ? (\r\n    <h1>Loading</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">RoboFriends</h1>\r\n      <SearchBox searchChange={onSearchChange} />\r\n      <Scroll>\r\n        <ErrorBoundry>\r\n          <CardList robots={filteredRobots} />\r\n        </ErrorBoundry>\r\n      </Scroll>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"iIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,MAAM,KAAM,sBAAsB,CACzC,MAAO,CAAAC,YAAY,KAAM,4BAA4B,CACrD,MAAO,WAAW,CAClB,MAAO,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAAC,SAAA,CAA4BX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAAsChB,QAAQ,CAAC,EAAE,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAA0BpB,QAAQ,CAAC,CAAC,CAAC,CAAAqB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA9BE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB;AACA;AACA;AACA;AACA;AAEApB,SAAS,CAAE,UAAM,CACfuB,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAAC,SAAAC,QAAQ,QAAG,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CAChCF,IAAI,CAAC,SAAAG,KAAK,CAAI,CAACb,SAAS,CAACa,KAAK,CAAC,EAAC,CAAC,CACpC,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,KAAK,CAAK,CAChCX,cAAc,CAACW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACpC,CAAC,CAED,GAAM,CAAAC,cAAc,CAAGnB,MAAM,CAACoB,MAAM,CAAC,SAACC,KAAK,CAAK,CAC9C,MAAO,CAAAA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACpB,WAAW,CAACmB,WAAW,CAAC,CAAC,CAAC,CACrE,CAAC,CAAC,CACF,MAAO,CAACvB,MAAM,CAACyB,MAAM,cACnBhC,IAAA,OAAAiC,QAAA,CAAI,SAAO,CAAI,CAAC,cAEhB/B,KAAA,QAAKgC,SAAS,CAAC,IAAI,CAAAD,QAAA,eACjBjC,IAAA,OAAIkC,SAAS,CAAC,IAAI,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,cACnCjC,IAAA,CAACJ,SAAS,EAACuC,YAAY,CAAEb,cAAe,CAAE,CAAC,cAC3CtB,IAAA,CAACH,MAAM,EAAAoC,QAAA,cACLjC,IAAA,CAACF,YAAY,EAAAmC,QAAA,cACXjC,IAAA,CAACL,QAAQ,EAACY,MAAM,CAAEmB,cAAe,CAAE,CAAC,CACxB,CAAC,CACT,CAAC,EACN,CACN,CACH,CAEA,cAAe,CAAAvB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}